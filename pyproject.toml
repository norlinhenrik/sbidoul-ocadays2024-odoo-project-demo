# we use the hatch-odoo build backend which knows how to detect dependencies
# from Odoo addons manifests
[build-system]
requires = ["hatchling", "hatch-odoo"]
build-backend = "hatchling.build"

[project]
name = "ocadays2024-uv-demo"
version = "0.1.0"
description = "OCA Days 2024 Odoo with uv demo"
readme = "README.md"
requires-python = "==3.10.*"
dynamic = ["dependencies"]

# tell uv when dependencies may change
[tool.uv]
cache-keys = [
    { file = "pyproject.toml" },
    { file = "odoo/addons/*/__manifest__.py" },
]

[tool.hatch.build]
packages = ["odoo"]

# Enable the hatch-odoo metadata hook to generate dependencies from addons manifests.
[tool.hatch.metadata.hooks.odoo-addons-dependencies]

[tool.hatch-odoo]
# dependencies that are not in the addons manifest
dependencies = [
    "odoo==16.0.*",
    # Add some constraints to Odoo deps that should be in their setup.py
    "lxml[html_clean]>=5.2",
    "setuptools<71",
    "werkzeug==3.0.*",
]
addons_dirs = ["odoo/addons"]

[tool.uv.sources]
odoo = { git = "https://github.com/OCA/OCB", branch = "16.0" }
# odoo-addon-mis_builder_budget = { git = "https://github.com/OCA/mis-builder", rev = "refs/pull/634/head", subdirectory = "mis_builder_budget" }
